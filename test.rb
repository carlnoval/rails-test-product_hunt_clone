# Testing Notes

# **
# test folder are generated by rails when creating the project
# files to used to setup things needed for testing: gems, framework, framework configuration, etc
# test/application_system_test_case.rb
# test/test_helper.rb

# **
# make test_helper work with devise
# Warden is a gem, foundation of devise
# test/test_helper.rb
class ActiveSupport::TestCase
  # [...]

  # Devise test helpers
  include Warden::Test::Helpers
  Warden.test_mode!
end

# **
# Register a headless chrome browser to work with Capybara
# Capybara - library that allows testing scripts with a browser
# Selenium::WebDriver allows sending instructions from Ruby to Chrome
Capybara.register_driver :headless_chrome do |app|
  options = Selenium::WebDriver::Chrome::Options.new(args: %w[no-sandbox headless disable-gpu window-size=1400,900])
  # options is deprecated so changed it to capabilities
  Capybara::Selenium::Driver.new(app, browser: :chrome, capabilities: options)
end
Capybara.save_path = Rails.root.join('tmp/capybara')
Capybara.javascript_driver = :headless_chrome

# **
# test/application_system_test_case.rb - file that deals only with browser test
# Replace the whole file with:
require "test_helper"

# Make sure drivers dont fail under parallel testing
Webdrivers::Chromedriver.update

class ApplicationSystemTestCase < ActionDispatch::SystemTestCase
  driven_by :headless_chrome
end

# **
# config/environments/test.rb
Rails.application.configure do
  # [ ... ]

  # For clearer error messages in case of Exception errors
  config.action_dispatch.show_exceptions = true # Update this line to true

  # [ ... ]
end

# **
# config/environments/test.rb

rails g system_test product
# test/system/ is the dir wher rails stores system tests
# create    test/system/products_test.rb with contents below
# capybara methods can be used in this file

class ProductsTest < ApplicationSystemTestCase
  # def test_visiting_the_index
  # end

  # test below is the same method as above
  require "application_system_test_case"
  # test "visiting the index" do
  #   visit products_url
  #
  #   assert_selector "h1", text: "Product"
  # end
end

# udpate file
# test/system/products_test.rb
require "application_system_test_case"

class ProductsTest < ApplicationSystemTestCase
  test "visiting the index" do
    # visit is a capybara method
    # root_url points to products#index
    visit root_url
    #  another capybara method that makes sure there is an h1 tag with text of Product in the page
    # returns ture if the test passed
    assert_selector "h1", text: "Awesome Products"
  end
end

# **
# Run tests with:
rails test:system
